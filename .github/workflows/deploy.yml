name: Deploy to Remote Docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate SSH key
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t ed25519 -C "conecsa@conecsa.com.br" -f ~/.ssh/id_ed25519 -N ""
        cat ~/.ssh/id_ed25519.pub
      env:
        HOME: /home/runner

    - name: Set up SSH
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519
        ssh-keyscan -H conecsa.com.br >> ~/.ssh/known_hosts

    - name: Copy SSH key to remote host
      run: |
        cat ~/.ssh/id_ed25519.pub | ssh conecsa@conecsa.com.br "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"

    - name: Create Docker context
      run: |
        docker context create remote --docker "host=ssh://conecsa@conecsa.com.br"

    - name: Create .env file
      run: |
        echo "CRYPTO_KEY=${{ secrets.CRYPTO_KEY }}" >> .env
        echo "DATABASE_SCHEMA=${{ secrets.DATABASE_SCHEMA }}" >> .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "EMAIL=${{ secrets.EMAIL }}" >> .env
        echo "FIRST_NAME=${{ secrets.FIRST_NAME }}" >> .env
        echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "LAST_NAME=${{ secrets.LAST_NAME }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "REGISTER_NUMBER=${{ secrets.REGISTER_NUMBER }}" >> .env
        echo "USERCODE=${{ secrets.USERCODE }}" >> .env
        echo "USERNAME=${{ secrets.USERNAME }}" >> .env
      working-directory: /home/runner/work/PetrolubDashboardApi/PetrolubDashboardApi

    - name: Deploy with Docker Compose v2
      run: |
        docker --context remote compose up -d
      working-directory: /home/runner/work/PetrolubDashboardApi/PetrolubDashboardApi
